{
  "name": "react-native-segmented-picker",
  "version": "2.0.2",
  "description": "Selection picker wheel with multi-column support and optional native dependencies.",
  "author": "Adam McArthur",
  "license": "MIT",
  "private": false,
  "main": "dist/bundle.ts",
  "types": "dist/index.d.ts",
  "scripts": {
    "lint": "eslint ./ && tsc --project ./tsconfig.json --noEmit --skipLibCheck",
    "unit-test": "jest --testPathIgnorePatterns __tests__/",
    "test": "yarn lint && yarn unit-test",
    "build": "rm -rf dist && rollup --config rollup.config.js",
    "postinstall": "yarn build",
    "e2e-android": "cd examples && yarn install && yarn e2e-android-debug-init && yarn e2e-android-debug --take-screenshots all --record-logs all",
    "e2e-ios": "cd examples && yarn install && cd ios && pod install && cd ../ && yarn e2e-ios-debug-init && yarn e2e-ios-debug --take-screenshots all --record-logs all"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/helloheartteam/react-native-segmented-picker.git"
  },
  "homepage": "https://github.com/helloheartteam/react-native-segmented-picker#readme",
  "bugs": {
    "url": "https://github.com/helloheartteam/react-native-segmented-picker/issues"
  },
  "keywords": [
    "react-native",
    "UIPicker",
    "UIPickerView",
    "spinner",
    "picklist",
    "select options",
    "dropdown list",
    "wheel spinner",
    "date spinner",
    "date picker",
    "wheel picker",
    "segmented picker",
    "segmented dropdown",
    "column picker"
  ],
  "dependencies": {
    "@types/prop-types": "^15.7.4",
    "prop-types": ">= 15.8.1",
    "react-native-animatable": "^1.3.0"
  },
  "peerDependencies": {
    "react": ">= 17.0.2",
    "react-native": ">= 0.67.2"
  },
  "devDependencies": {
    "@babel/core": "7.17.5",
    "@babel/plugin-proposal-class-properties": "^7.8.3",
    "@babel/plugin-transform-react-jsx": "^7.9.4",
    "@rollup/plugin-babel": "^5.0.0",
    "@types/jest": "27.4.0",
    "@types/react-native": "^0.66.16",
    "@types/react-test-renderer": "17.0.1",
    "@typescript-eslint/eslint-plugin": "5.12.1",
    "@typescript-eslint/parser": "5.12.1",
    "babel-jest": "27.5.1",
    "detox": "19.4.5",
    "detox-getprops": "^0.1.1",
    "eslint": "8.9.0",
    "eslint-config-airbnb-typescript": "16.1.0",
    "eslint-plugin-detox": "^1.0.0",
    "eslint-plugin-import": "2.20.0",
    "eslint-plugin-jest": "26.1.1",
    "eslint-plugin-jsx-a11y": "6.2.3",
    "eslint-plugin-react": "7.18.0",
    "jest": "27.5.1",
    "metro-react-native-babel-preset": "0.68.0",
    "react": "17.0.1",
    "react-native": "0.64.1",
    "react-test-renderer": "17.0.2",
    "rollup": "^2.10.2",
    "rollup-plugin-typescript2": "0.31.2",
    "typescript": "4.5.5"
  },
  "jest": {
    "preset": "react-native",
    "transform": {
      "^.+\\.jsx?$": "<rootDir>/node_modules/react-native/jest/preprocessor.js"
    },
    "transformIgnorePatterns": [
      "node_modules/(?!react-native|!react-navigation|!static-container)"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/",
      "<rootDir>/__test__/"
    ],
    "setupFiles": [
      "./__mocks__/init.ts"
    ]
  },
  "detox": {
    "test-runner": "jest",
    "runner-config": "./__tests__/config.json",
    "artifacts": {
      "rootDir": "./__tests__/.artifacts"
    },
    "configurations": {
      "android.debug": {
        "binaryPath": "examples/android/app/build/outputs/apk/debug/app-debug.apk",
        "build": "cd examples/android && RN_BUNDLE_TYPE=E2E E2E_MODE=debug ./gradlew assembleDebug assembleAndroidTest -DtestBuildType=debug && cd ..",
        "type": "android.attached"
      },
      "ios.sim.debug": {
        "binaryPath": "examples/ios/build/Build/Products/Debug-iphonesimulator/SegmentedPickerDemo.app",
        "build": "cd examples && RN_BUNDLE_TYPE=E2E E2E_MODE=debug xcodebuild -workspace ios/SegmentedPickerDemo.xcworkspace -scheme SegmentedPickerDemo -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build",
        "type": "ios.simulator",
        "device": {
          "type": "iPhone SE (2nd generation)"
        }
      }
    }
  }
}
